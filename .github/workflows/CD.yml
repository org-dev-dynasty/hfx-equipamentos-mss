name: Node.js Typescript CD
on:
    workflow_run:
        workflows: ["Check & Create PR"]
        types:
            - completed
    push:
        branches:
            - dev
            - homolog
            - prod
jobs:
    DeployToAWS:
        environment:
            name: ${{ github.ref }}
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        steps:
            - uses: actions/checkout@v2
            - name: Setup AWS Credentials
              run: |
                echo "Configuring AWS Credentials"
                aws configure set aws_access_key_id ${{ vars.AWS_ACCESS_KEY }}
                aws configure set aws_secret_access_key ${{ vars.AWS_SECRET_ACCESS_KEY }}
                aws configure set default.region sa-east-1
                aws configure set default.output json
            - name: Use Node.js 18.x
              uses: actions/setup-node@v2
              with:
                node-version: 18.x
            - name: Setting stage, stack name
              run: |
                echo "STAGE=${{ github.ref_name }}"
                echo "STACK_NAME=${{ vars.STACK_NAME }}${{ github.ref_name }}" >> $GITHUB_ENV
            - name: Install dependencies
              run: |
                yarn add vite
                yarn global add aws-cdk
                yarn install -g
                cd iac
                yarn install --frozen-lockfile            
            - name: Build and Export
              run: |
                yarn build
            - name: Setup envs
              run: |
                echo AWS_REGION=sa-east-1>> $GITHUB_ENV
                echo AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} >> $GITHUB_ENV 
                echo STACK_NAME=${{ env.STACK_NAME }} >> $GITHUB_ENV
                echo GITHUB_REF_NAME=${{ github.ref_name }} >> $GITHUB_ENV
                echo DYNAMO_TABLE_NAME=${{ vars.DYNAMO_TABLE_NAME }} >> $GITHUB_ENV
                echo "JWT_SECRET=${{ vars.JWT_SECRET }}" >> $GITHUB_ENV
            - name: CDK Bootstrap
              run: |
                echo "CDK Bootstrap"
                cd iac
                aws cloudformation describe-stacks --stack-name CDKToolkit 2>&1 > /dev/null || \
                  cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/sa-east-1
            - name: Deploy with CDK
              run: |
                cd iac
                cdk synth
                cdk deploy --require-approval never