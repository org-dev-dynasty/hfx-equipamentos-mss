name: Node.js Typescript CD
on:
    workflow_run:
        workflows: ["Check & Create PR"]
        types:
            - completed
    push:
        branches:
            - dev
            - homolog
            - prod
jobs:
  DeployToAWS:
      environment:
          name: ${{ github.ref }}
      runs-on: ubuntu-latest
      permissions:
          id-token: write
          contents: read
      steps:
        - uses: actions/checkout@v2
        - name: Setup AWS Credentials
          run: |
            echo "Configuring AWS Credentials"
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ${{ secrets.REGION }}
            aws configure set default.output json
        - name: Use Node.js 18.x
          uses: actions/setup-node@v2
          with:
            node-version: 18.x
        - name: Setting stage, stack name
          run: |
            echo "STAGE=${{ secrets.STAGE }}" >> $GITHUB_ENV
            echo "STACK_NAME=${{ secrets.STACK_NAME }}${{ github.ref_name }}" >> $GITHUB_ENV
        - name: Install dependencies
          run: |
            yarn add vite
            yarn global add aws-cdk
            yarn install -g
            cd iac
            yarn install --frozen-lockfile            
        - name: Build and Export
          run: |
            yarn build
        - name: Setup envs
          run: |
            echo STAGE=${{ secrets.STAGE }} >> $GITHUB_ENV
            echo REGION=${{ secrets.REGION }}>> $GITHUB_ENV
            echo AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} >> $GITHUB_ENV 
            echo STACK_NAME=${{ env.STACK_NAME }} >> $GITHUB_ENV
            echo GITHUB_REF_NAME=${{ github.ref_name }} >> $GITHUB_ENV
            echo DYNAMO_TABLE_NAME=${{ secrets.DYNAMO_TABLE_NAME }} >> $GITHUB_ENV
            echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> $GITHUB_ENV
        - name: CDK Bootstrap
          run: |
            echo "CDK Bootstrap"
            cd iac
            aws cloudformation describe-stacks --stack-name CDKToolkit 2>&1 > /dev/null || \
              cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/sa-east-1
        - name: Deploy with CDK
          run: |
            source $GITHUB_ENV
            cd iac
            cdk synth
            cdk deploy --require-approval never
          env:
              STAGE: ${{ secrets.STAGE }}
              AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
              AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              STACK_NAME: ${{ secrets.STACK_NAME }}
              DYNAMO_TABLE_NAME: ${{ secrets.DYNAMO_TABLE_NAME }}
              JWT_SECRET: ${{ secrets.JWT_SECRET }}
              REGION: ${{ secrets.REGION }}
              AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}